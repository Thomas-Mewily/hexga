#![allow(unused_imports)]
#![allow(dead_code)]
#![allow(unused_variables)]
#![allow(unused_mut)]

use std::fmt::Debug;
use std::fs;
use std::path::Path;
use std::{any::Any, sync::Arc};
use hexga_generational::prelude::*;

#[cfg(feature = "serde")]
use serde::{Deserialize, Deserializer, Serialize, Serializer, de::Visitor, ser::SerializeStruct};

#[cfg(feature = "hexga_io")]
use hexga_io::{IoLoad, IoSave, Load, Save};






pub struct Fs
{
    name: String,
    kind: FsKind,
}

pub enum FsKind
{
    File(FsFile),
    Folder(FsFolder),
}

pub struct FsFile
{
    content: Vec<u8>,
}

pub struct FsFolder
{
    childs: Vec<Fs>,
}

fn t()
{
    let a = PathElement::from_disk("./tmp/io_test/asset").unwrap();

    dbg!(&a);
}

fn main()
{
    let table

    println!("Hello, world!");
}
